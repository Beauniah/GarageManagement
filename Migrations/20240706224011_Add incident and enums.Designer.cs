// <auto-generated />
using System;
using GarageManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarageManagement.Migrations
{
    [DbContext(typeof(ApplicationDbcontext))]
    [Migration("20240706224011_Add incident and enums")]
    partial class Addincidentandenums
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GarageManagement.Models.Entities.Incident", b =>
                {
                    b.Property<Guid>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateReported")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeverityLevel")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IncidentId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("GarageManagement.Models.Entities.Ministry", b =>
                {
                    b.Property<Guid>("MinistryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MinistryId");

                    b.ToTable("Ministry");
                });

            modelBuilder.Entity("GarageManagement.Models.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAquired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MinistryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Year")
                        .HasColumnType("date");

                    b.HasKey("VehicleId");

                    b.HasIndex("MinistryId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("GarageManagement.Models.Entities.Incident", b =>
                {
                    b.HasOne("GarageManagement.Models.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("GarageManagement.Models.Entities.Vehicle", b =>
                {
                    b.HasOne("GarageManagement.Models.Entities.Ministry", "Ministry")
                        .WithMany("Vehicles")
                        .HasForeignKey("MinistryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ministry");
                });

            modelBuilder.Entity("GarageManagement.Models.Entities.Ministry", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
